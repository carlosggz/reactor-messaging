buildscript {
	ext {
		springBootVersion = '2.7.4'
		reactorRabbitmq = '1.5.5'
		reactorKafka = '1.3.13'
	}
	repositories {
		mavenLocal()
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'maven-publish'
	id 'java-library'
	id 'io.freefair.lombok' version '8.0.1'
}

group = 'org.example'
sourceCompatibility = '11'

repositories {
	mavenLocal()
	mavenCentral()
}

dependencies {
	// spring
	api('org.springframework.boot:spring-boot-starter') {
		exclude group: 'ch.qos.logback', module: 'logback-classic'
	}
	api('org.springframework.boot:spring-boot-starter-json') {
		exclude group: 'ch.qos.logback', module: 'logback-classic'
	}
	api 'org.springframework:spring-messaging'

	// reactor
	api "io.projectreactor.rabbitmq:reactor-rabbitmq:${reactorRabbitmq}"
	api "io.projectreactor.kafka:reactor-kafka:${reactorKafka}"

	// other
	api 'org.apache.commons:commons-lang3:3.11'
	api 'com.github.fridujo:rabbitmq-mock:1.1.1'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'

	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testImplementation 'org.junit.jupiter:junit-jupiter-params'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine'

	testImplementation 'org.mockito:mockito-junit-jupiter'
	testImplementation 'org.mockito:mockito-core:4.8.0'

	testImplementation 'org.awaitility:awaitility:4.2.0'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
}

jar {
	enabled = true
	archiveClassifier = ''
}

bootJar {
	enabled = false
}

test {
	useJUnitPlatform()
}

publishing {
	publications {
		customLibrary(MavenPublication) {
			from components.java
		}
	}
}
